.gridster {
    outline: solid 1px #DDD;
    background: #f7f7f7;
}


.gridster ul {
    background: #EEE;
    list-style: none;
    margin: 0;
    padding: 0;
}

li.gs-w {
    border: solid 1px #c7c7c7;
    list-style: none;
    /* border-top-color: transparent; */
}

li.gs-w.player-revert {}

value {
    display: inline;
    font-family: monospace;
    /* padding: .02em 0.3em 0.05em; */
    /* background: rgba(255, 255, 255, 0.44); */
    /* color: white; */
    border-radius: 2px;
    /* font-size: 1.1em; */
}

component {
    /* border: solid 1px #d2d2d2; */
    display: block;
    height: 100%;
    width: 100%;
    padding: 0px;
}

component input[type=text] {
    font-family: monospace;
    font-size: 0.9em;
}

component .mdl-textfield {
    padding: 0em 0;
    font-size: 1em;
    width: 100%;
}

component label.mdl-textfield__label {
    background: #444;
    /* outline: solid 1px red; */
}

component section {
    /* outline: solid 1px; */
    width: initial;
    margin: 0 0 0px;
}

component h1 {
    margin: 0;
    font-size: 0.9em;
    text-transform: uppercase;
    font-weight: normal;
    line-height: 1.2em;
    /* font-family: monospace; */
    padding: 0.2em 0.4em;
    background: #CCC;
}

component section label span.text {
    display: block;
    min-width: 1.5em;
    vertical-align: initial;
    text-align: center;
    background: #f5f5f5;
}

component:hover {
    /* border: solid 1px #333; */
}

component section button.mdl-button {
    /* background-color: #525252 !important; */
    box-shadow: none;
    /* padding: 0.3em 1em; */
    /* height: initial; */
    /* line-height: initial; */
    /* min-width: initial; */
    /* font-family: monospace; */
}

component section button.mdl-button:hover {
    /* background-color: #777 !important; */
}

canvas#test_canvas {
    position: absolute;
    z-index: 0;
}

canvas#renderCanvas {
    position: absolute;
}

component>h1 {
    font-size: inherit;
    padding: 0;
    letter-spacing: 1px;
    /* background: #d6d6d6; */
    color: #464646;
    padding: 0.5em 0.5em;
    /* border-bottom: solid 1px #000; */
    cursor: move;
}

component.unbound input {
    color: #b70000;
}

component.unbound section {
    color: #717171;
}

component {
    overflow: auto;
}

component::-webkit-scrollbar {
    width: 5px;
    background: #FFF;
    height: 5px;
}

component::-webkit-scrollbar-track {
    background: #e4e4e4;
    border-left: solid 1px white;
}

component::-webkit-scrollbar-thumb {
    background-color: #292929;
    border-left: solid 1px #FFF;
}

component button[action=config] {
    position: absolute;
    right: 1px;
    height: 20px;
    color: white !important;
    font-size: 16px;
    min-width: 20px;
    width: 22px;
    text-align: center;
    border-radius: 0;
}

component button[action=config] i.material-icons {
    font-size: 10px;
    line-height: 22px;
    /* width: 20px; */
    color: #999;
}

component button[action=config] i.material-icons:hover, component button[action=config] i.material-icons:focus {
    font-size: 16px;
    color: #FFF;
}

span.gs-resize-handle.gs-resize-handle-both {
    /* position: absolute; */
    /* bottom: 0; */
    /* right: 0; */
}

component section.buttons {
    margin-top: 10px;
}

.gridster ul li.dragging.player {
    background: #BBB;
}

component[name=config] section .row>label {
    width: 49%;
    display: flex;
}

component[name=config] section .row {
    border: solid 1px #AAA;
    border-left: none;
    border-right: none;
    border-bottom: none;
    display: flex;
}

component[name=config] section .row div.mdl-textfield {
    display: inline-block;
    width: 50%;
    /* border: solid; */
}

component[name=config] section .row label span.text {
    display: inline-block;
    width: 45%;
    text-align: right;
    padding-right: 3%;
}

component[name=config] section .row {}

component section .mdl-textfield.is-invalid .mdl-textfield__error {
    background: #a90000;
    position: absolute;
    top: .45em;
    right: 2px;
    width: 1em;
    height: 1em;
    overflow: hidden;
    border-radius: 50%;
    margin: 0;
    content: ' ';
    text-indent: 2em;
    transition: background 0.3s ease-out;
}

.mdl-textfield.is-invalid .mdl-textfield__error {
    background: black;
}

component section[name=component_size] {
    position: absolute;
    right: 0;
    background: #222;
    min-width: 65px;
    display: flex;
    font-size: 1em;
    line-height: 1em;
    top: 0em;
    /* border-radius: 30%; */
    /* overflow: hidden; */
    opacity: 1;
    transition-delay: 0.2s;
}

component section[name=component_size] label {
    background: #fff;
}

component section[name=component_size] span.text {
    background: #d8d8d8;
    color: #616161;
    min-width: initial;
    width: 1.3em;
    text-align: center;
    font-size: 0.9em;
}

component section[name=component_size] value {
    text-align: center;
    display: inline-block;
    width: 100%;
}

.resizing component section[name=component_size] {
    visibility: visible;
    top: -1em;
    opacity: 1;
    transition-delay: 0s;
}

component section[name=component_size] {
    visibility: hidden;
    /* top: 0em; */
    opacity: 0;
    transition: top 0.3s ease-out, opacity 0.2s ease;
    transition-delay: 1s;
}

component section.inline {
    display: flex;
    width: 100%;
}


component .mdl-button--raised:focus:not(:active) {
    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.43);
    outline: solid 2px #196fff;
    outline-offset: -3px;
    /* font-weight: 600; */
    transition-duration: .2s;
}

.center-center {
    /* background: #58af7f; */
    /* color: white; */
    /* font-size: 3em; */
    /* text-align: center; */
    display: flex;
    vertical-align: middle;
    align-items: center;
    border-color: #379863;
    justify-content: center;
}

welcome p {
    font-size: inherit;
}

.welcome p {
    font-size: inherit;
    /* display: inline-block; */
    /* height: 100%; */
    width: 100%;
    margin: 0;
    /* height: 1em; */
    vertical-align: top;
    line-height: 1em;
    font-family: 'Istok Web', 'Roboto', "Helvetica","Arial",sans-serif;
}

component[name=tools] section.buttons {
    margin: 0;
    display: flex;
    /* justify-content: center; */
    height: 100%;
}

li.welcome {
    background: #58af7f;
    color: white;
    font-size: 3em;
    text-align: center;
    border-color: #449e6d;
}

component[name=tools]>h1 {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    font-size: 0.8em;
}

section.buttons.center-center button {
    margin: 0.2em;
}

.dragging component[name=tools]>h1 {
    visibility: initial;
    transition: opacity .3s ease;
    opacity: 1;
}


component>h1 value {
    font-family: inherit;
}